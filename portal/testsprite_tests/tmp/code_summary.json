{"tech_stack":["TypeScript","Next.js 15 (App Router)","React 19","Ant Design 5","MongoDB + Mongoose","NextAuth","Supabase Storage","pdf-parse","pdfjs-dist (legacy, server no-worker)","Google Cloud Vision API","Tesseract.js","Pino"],"features":[{"name":"Accounting Upload UI","description":"Client page to upload bank statements, start OCR, and monitor processing status.","files":["src/app/accounting/upload/page.tsx","src/app/accounting/page.tsx","src/app/accounting/transactions/page.tsx"]},{"name":"Statement Upload API","description":"Receives multipart uploads, stores file in Supabase, creates DB record, and triggers async OCR.","files":["src/app/api/statements/upload/route.ts","src/lib/supabaseAdmin.ts","src/lib/db.ts"]},{"name":"Statement Retry OCR API","description":"Downloads original file and re-runs server OCR pipeline for an existing statement.","files":["src/app/api/statements/[id]/retry/route.ts","src/lib/ocr/processStatement.ts"]},{"name":"Statements CRUD APIs","description":"List, get, and modify statements with pagination and filtering.","files":["src/app/api/statements/route.ts","src/app/api/statements/[id]/route.ts"]},{"name":"Transactions API","description":"Create and manage transactions parsed from OCR results.","files":["src/app/api/transactions/route.ts"]},{"name":"Server OCR Service","description":"Server-optimized OCR: Google Vision (API key or service account) with fallbacks; parses bank statement text into structured data.","files":["src/lib/ocr-server.ts"]},{"name":"OCR Fallback (pdfjs-dist)","description":"PDF text extraction using pdfjs-dist legacy build with disableWorker=true for Node environments.","files":["src/app/api/statements/upload/route.ts","src/lib/ocr/processStatement.ts","src/types/pdfjs-legacy.d.ts"]},{"name":"PDF Text Extraction (pdf-parse)","description":"Primary path for extracting embedded text from PDFs.","files":["src/lib/pdf-processor.ts","src/app/api/ocr/route.ts","src/app/api/statements/upload/route.ts"]},{"name":"Supabase Storage Integration","description":"Server-side upload/download of files to Supabase Storage buckets.","files":["src/lib/supabaseAdmin.ts","src/lib/supabaseClient.ts"]},{"name":"Database Models","description":"Mongoose models for statements, files, accounts, and transactions.","files":["src/models/Statement.ts","src/models/File.ts","src/models/Account.ts","src/models/Transaction.ts"]},{"name":"Auth & Session","description":"NextAuth integration used by API routes (getServerSession).","files":["src/lib/auth-config.ts"]},{"name":"Utilities & Observability","description":"DB connector and logging (pino).","files":["src/lib/db.ts"]}]}
